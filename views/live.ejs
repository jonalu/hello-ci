<!doctype html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <link href='https://fonts.googleapis.com/css?family=Comfortaa&subset=latin,greek' rel='stylesheet' type='text/css'>
    <script src="/socket.io/socket.io.js"></script>
    <style>
        body {
            font-family: 'Comfortaa', cursive;
            font-size: 14px;
            margin: 0;
        }

        td, tr, table {
            margin: 0;
            padding: 0;
            border: none;
            border-collapse: collapse;
        }

        td {
            padding: 0.5em 0;
        }

        table {
            width: 100%;
            /*border: 0px solid #2F6FAD;*/
            /*margin-bottom: 1%;*/
        }

        tr:nth-child(even) {
            background-color: #eee;
        }

        tr.finished td {
            font-weight: bold;
            /*color: red;*/
        }

        td.goals {
            width: 5%;
            text-align: center;
        }

        td.start {
            width: 4%;
            text-align: center;
            font-size: 0.8em;
            color: #000;
        }

        td.live {
            color: #FF6B6B;
        }

        td.team {
            width: 38%;
        }

        td.teamA {
            text-align: right;
        }

        td.status {
            width: 10%;
        }

        th {
            padding: 0.5em;
            color: #eee;
            background-color: #2C2C2C;
        }
    </style>
</head>
<body>
<div id='tournaments'></div>
<script>
    var socket = io();

    socket.on('matches', function (tournaments) {

        console.log('Got event from server');

        var div = document.getElementById('tournaments');

        // Clear old data
        div.innerHTML = '';

        for (var i = 0; i < tournaments.length; i++) {
            var table = document.createElement('table');

            var hdr = document.createElement('tr');
            var th = document.createElement('th');
            th.setAttribute('colspan', '5');
            var tht = document.createTextNode(tournaments[i].name);
            th.appendChild(tht);
            hdr.appendChild(th);
            table.appendChild(hdr);

            for (var j = 0; j < tournaments[i].matches.length; j++) {
                var match = tournaments[i].matches[j];
                var tr = document.createElement('tr');
                var td1 = document.createElement('td');
                var td2 = document.createElement('td');
                var td3 = document.createElement('td');
                var td4 = document.createElement('td');
                var td5 = document.createElement('td');
                var td6 = document.createElement('td');
                td1.appendChild(document.createTextNode(match.teamA.name));
                td2.appendChild(document.createTextNode(match.teamB.name));
                tr.appendChild(td1);
                if (match.matchStatus.id === -1) {
                    td6.appendChild(document.createTextNode(match.startTime));
                } else if (match.matchStatus.id === 1) {
                    td6.appendChild(document.createTextNode('FT'));
                } else {
                    td6.appendChild(document.createTextNode(match.playTime + '\''));
                    td6.className += 'live ';
                }
                td3.appendChild(document.createTextNode(match.teamA.goals));
                td4.appendChild(document.createTextNode(match.teamB.goals));
                tr.appendChild(td3);
                tr.appendChild(td6);
                tr.appendChild(td4);
                td3.className += 'goals';
                td4.className += 'goals';
                td6.className += 'start';
                td1.className += 'team teamA';
                td2.className += 'team';
                td5.className += 'status';
//                console.log('status', match.matchStatus);
                tr.className += match.matchStatus.id == 1 ? 'finished' : '';
                tr.appendChild(td2);
                table.appendChild(tr);
            }
            div.appendChild(table);
        }
    })

</script>
</body>
</html>
